name: Plan

on:
  push:
    branches: ["main"]
    tags-ignore: ["**"]
  workflow_dispatch:

env:
  TF_VAR_billing_account_id: "${{ secrets.BILLING_ACCOUNT_ID }}"
  TF_VAR_seed_sa_email_address: "${{ secrets.SEED_SA_EMAIL_ADDRESS }}"
  TF_VAR_github_admin_token: "${{ secrets.ADMIN_GITHUB_TOKEN }}"
  TF_VAR_project_postfix: "${{ secrets.GCP_PROJECT_POSTFIX }}"
  TF_VAR_workload_identity_provider_name: "${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}"
  TF_VAR_workload_identity_pool_id: "${{ secrets.WORKLOAD_IDENTITY_POOL_ID }}"
  TF_IN_AUTOMATION: "true"
  GITHUB_TOKEN: "${{ secrets.ADMIN_GITHUB_TOKEN }}"
  CLOUDSDK_CORE_PROJECT: ${{ secrets.BASELINE_PROJECT_ID }}

permissions:
  id-token: write

jobs:
  compliance-scan:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authenticating
        uses: google-github-actions/auth@v0.6.0
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          # todo: replace with seed SA / (need to configure workload id pool)
          service_account: ${{ secrets.SEED_SA_EMAIL_ADDRESS }}
          token_format: 'access_token'
      - name: Setting up GCP environment
        uses: google-github-actions/setup-gcloud@v0.5.1
        with:
          export_default_credentials: true
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.3.2
      - name: Terraform Init
        run: terraform init
      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@v12.1343.0
        with:
          framework: terraform
          output_format: cli
          download_external_modules: true

  security-scan:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authenticating
        uses: google-github-actions/auth@v0.6.0
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          # todo: replace with seed SA / (need to configure workload id pool)
          service_account: ${{ secrets.SEED_SA_EMAIL_ADDRESS }}
          token_format: 'access_token'
      - name: Setting up GCP environment
        uses: google-github-actions/setup-gcloud@v0.5.1
        with:
          export_default_credentials: true
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.3.2
      - name: Terraform Init
        run: terraform init
      - name: Check security
        uses: triat/terraform-security-scan@v3.0.1

  qa:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authenticating
        uses: google-github-actions/auth@v0.6.0
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          # todo: replace with seed SA / (need to configure workload id pool)
          service_account: ${{ secrets.SEED_SA_EMAIL_ADDRESS }}
          token_format: 'access_token'
      - name: Setting up GCP environment
        uses: google-github-actions/setup-gcloud@v0.5.1
        with:
          export_default_credentials: true
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.3.2
      - name: Terraform Init
        run: terraform init
      - name: Terraform Format
        run: terraform fmt -check -recursive
      - name: Terraform Validate
        run: terraform validate -no-color

  plan:
    runs-on: ubuntu-20.04

    needs:
      - qa
      - security-scan
      - compliance-scan

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authenticating
        uses: google-github-actions/auth@v0.6.0
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          # todo: replace with seed SA / (need to configure workload id pool)
          service_account: ${{ secrets.SEED_SA_EMAIL_ADDRESS }}
          token_format: 'access_token'
      - name: Setting up GCP environment
        uses: google-github-actions/setup-gcloud@v0.5.1
        with:
          export_default_credentials: true
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.3.2
      - name: Init
        run: terraform init
      - name: Plan
        run: terraform plan -no-color
